/*
 * ChessGameManagement - OpenAPI 3.0
 * This is a ChessGameManagement Server based on the OpenAPI 3.0 specification.  At the end of this project it should be possible for every chess player  to store and manage your chess scoresheet in your own account. Furthermore,  it should be possible to display every move on a chess board and to analyze the individual moves.
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * Contact: mail@ben-kostka.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.ben_kostka.benchesster.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.ben_kostka.benchesster.client.model.User;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.ben_kostka.benchesster.client.JSON;


/**
 * Club
 */
@JsonPropertyOrder({
  Club.JSON_PROPERTY_CLUB_I_D,
  Club.JSON_PROPERTY_NAME,
  Club.JSON_PROPERTY_PRESIDENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-22T16:03:41.005461+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class Club {
  public static final String JSON_PROPERTY_CLUB_I_D = "club_ID";
  @javax.annotation.Nullable
  private Integer clubID;

  public static final String JSON_PROPERTY_NAME = "name";
  @javax.annotation.Nullable
  private String name;

  public static final String JSON_PROPERTY_PRESIDENT = "president";
  @javax.annotation.Nullable
  private User president;

  public Club() { 
  }

  public Club clubID(@javax.annotation.Nullable Integer clubID) {
    this.clubID = clubID;
    return this;
  }

  /**
   * Get clubID
   * @return clubID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLUB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClubID() {
    return clubID;
  }


  @JsonProperty(JSON_PROPERTY_CLUB_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClubID(@javax.annotation.Nullable Integer clubID) {
    this.clubID = clubID;
  }


  public Club name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public Club president(@javax.annotation.Nullable User president) {
    this.president = president;
    return this;
  }

  /**
   * Get president
   * @return president
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRESIDENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getPresident() {
    return president;
  }


  @JsonProperty(JSON_PROPERTY_PRESIDENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresident(@javax.annotation.Nullable User president) {
    this.president = president;
  }


  /**
   * Return true if this Club object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Club club = (Club) o;
    return Objects.equals(this.clubID, club.clubID) &&
        Objects.equals(this.name, club.name) &&
        Objects.equals(this.president, club.president);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clubID, name, president);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Club {\n");
    sb.append("    clubID: ").append(toIndentedString(clubID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    president: ").append(toIndentedString(president)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

