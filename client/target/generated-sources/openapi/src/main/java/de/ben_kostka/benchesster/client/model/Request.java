/*
 * ChessGameManagement - OpenAPI 3.0
 * This is a ChessGameManagement Server based on the OpenAPI 3.0 specification.  At the end of this project it should be possible for every chess player  to store and manage your chess scoresheet in your own account. Furthermore,  it should be possible to display every move on a chess board and to analyze the individual moves.
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * Contact: mail@ben-kostka.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.ben_kostka.benchesster.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.ben_kostka.benchesster.client.model.Game;
import de.ben_kostka.benchesster.client.model.User;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import de.ben_kostka.benchesster.client.JSON;


/**
 * Request
 */
@JsonPropertyOrder({
  Request.JSON_PROPERTY_REQUEST_I_D,
  Request.JSON_PROPERTY_SENDER,
  Request.JSON_PROPERTY_RECIPIENT,
  Request.JSON_PROPERTY_GAME,
  Request.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-22T16:03:41.005461+01:00[Europe/Berlin]", comments = "Generator version: 7.10.0")
public class Request {
  public static final String JSON_PROPERTY_REQUEST_I_D = "request_ID";
  @javax.annotation.Nullable
  private Integer requestID;

  public static final String JSON_PROPERTY_SENDER = "sender";
  @javax.annotation.Nullable
  private User sender;

  public static final String JSON_PROPERTY_RECIPIENT = "recipient";
  @javax.annotation.Nullable
  private User recipient;

  public static final String JSON_PROPERTY_GAME = "game";
  @javax.annotation.Nullable
  private Game game;

  public static final String JSON_PROPERTY_STATUS = "status";
  @javax.annotation.Nullable
  private String status;

  public Request() { 
  }

  public Request requestID(@javax.annotation.Nullable Integer requestID) {
    this.requestID = requestID;
    return this;
  }

  /**
   * Get requestID
   * @return requestID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REQUEST_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRequestID() {
    return requestID;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestID(@javax.annotation.Nullable Integer requestID) {
    this.requestID = requestID;
  }


  public Request sender(@javax.annotation.Nullable User sender) {
    this.sender = sender;
    return this;
  }

  /**
   * Get sender
   * @return sender
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getSender() {
    return sender;
  }


  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSender(@javax.annotation.Nullable User sender) {
    this.sender = sender;
  }


  public Request recipient(@javax.annotation.Nullable User recipient) {
    this.recipient = recipient;
    return this;
  }

  /**
   * Get recipient
   * @return recipient
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public User getRecipient() {
    return recipient;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipient(@javax.annotation.Nullable User recipient) {
    this.recipient = recipient;
  }


  public Request game(@javax.annotation.Nullable Game game) {
    this.game = game;
    return this;
  }

  /**
   * Get game
   * @return game
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Game getGame() {
    return game;
  }


  @JsonProperty(JSON_PROPERTY_GAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGame(@javax.annotation.Nullable Game game) {
    this.game = game;
  }


  public Request status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  /**
   * Return true if this Request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Request request = (Request) o;
    return Objects.equals(this.requestID, request.requestID) &&
        Objects.equals(this.sender, request.sender) &&
        Objects.equals(this.recipient, request.recipient) &&
        Objects.equals(this.game, request.game) &&
        Objects.equals(this.status, request.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestID, sender, recipient, game, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Request {\n");
    sb.append("    requestID: ").append(toIndentedString(requestID)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    game: ").append(toIndentedString(game)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

